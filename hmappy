#include <iostream>
#include<bits/stdc++.h>
#include <numeric> 
#include <boost/math/common_factor.hpp> 
using namespace std;
int isPrime(long long int n) 
{ 
    // Corner cases 
    if (n <= 1)  return 0; 
    if (n <= 3)  return 1; 
  
    // This is checked so that we can skip  
    // middle five numbers in below loop 
    if (n%2 == 0 || n%3 == 0) return false; 
  
    for (int i=5; i*i<=n; i=i+6) 
        if (n%i == 0 || n%(i+2) == 0) 
           return 0; 
  
    return 1; 
} 
int main()
{
    #ifdef JUDGE
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    srand(time(NULL));
    int t;
    cin>>t; long long int n,a,b,k;
    
    while(t--)
    {
        cin>>n>>a>>b>>k;
        long long int adiv;long long int bdiv;long long int valdiv;long long int total;
            adiv=n/a;
            bdiv=n/b;
            long long int val=a*b;
            valdiv=n/val;
        if(a!=b)
        
          { long long int gc=__gcd(a,b); 
              
              if(gc==1)
              {  
                 total= (adiv-valdiv)+(bdiv-valdiv);
              }
              else if(a%b==0 || b%a==0)
              {
                  total=abs(adiv-bdiv);
              }
              else
              {
                  int aa=isPrime(a);
                  int bb=isPrime(b);
                  if((aa==0 &&bb==1)||(aa==1&&bb==0))
                  {
                      total= (adiv-valdiv)+(bdiv-valdiv);
                  }
                  else if(aa==0 && bb==0)
                  {
                      long long int lc=boost::math::lcm(a,b)  ;
                      total=(adiv+bdiv)-(2*(n/lc));
                  }
                  
              }
          }
          else 
          total=0;
          if(total>=k)
          {
              cout<<"Win"<<endl;
          }
          else
          cout<<"Lose"<<endl;
          //cout<<total;
              
            
    }
}
